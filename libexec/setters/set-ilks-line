#!/usr/bin/env bash

#  Copyright (C) 2019-2020 Maker Ecosystem Growth Holdings, INC.

#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Affero General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.

#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Affero General Public License for more details.

#  You should have received a copy of the GNU Affero General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.

# shellcheck source=lib/common.sh
. "$LIB_DIR/common.sh"

# Get config variables
CONFIG_FILE="$OUT_DIR/config.json"
# Get addresses
loadAddresses

log "SET ILKS LINE:"

# setLine() {
#     if [[ "$2" != "" && "$2" != "0" ]]; then
#         local line
#         line=$(echo "$2"*10^45 | bc)
#         line=$(seth --to-uint256 "${line%.*}")
#         calldata="$(seth calldata 'file(address,address,address,bytes32,bytes32,uint256)' "$MCD_PAUSE" "$MCD_GOV_ACTIONS" "$MCD_VAT" "$(seth --to-bytes32 "$(seth --from-ascii "$1")")" "$(seth --to-bytes32 "$(seth --from-ascii "line")")" "$line")"
#         sethSend "$PROXY_DEPLOYER" 'execute(address,bytes memory)' "$PROXY_PAUSE_ACTIONS" "$calldata"
#     fi
# }

tokens=$(jq -r ".tokens | keys_unsorted[]" "$CONFIG_FILE")

for token in $tokens; do
    ilks=$(jq -r ".tokens.${token}.ilks | keys_unsorted[]" "$CONFIG_FILE")
    for ilk in $ilks; do
        line="$(jq -r ".tokens.${token}.ilks.${ilk} | .line" "$CONFIG_FILE")"
        line=$(echo "$line"*10^45 | bc)
        gap="$(jq -r ".tokens.${token}.ilks.${ilk} | .lineGap" "$CONFIG_FILE")"
        gap=$(echo "$gap"*10^45 | bc)
        ttl="$(jq -r ".tokens.${token}.ilks.${ilk} | .lineTtl" "$CONFIG_FILE")"

        ilkBytes32="$(seth --to-bytes32 "$(seth --from-ascii "${token}-${ilk}")")"
        sethSend "$MCD_IAM_AUTO_LINE" 'setIlk(bytes32,uint256,uint256,uint256)' "$ilkBytes32" "$line" "$gap" "$ttl"
        sethSend "$MCD_IAM_AUTO_LINE" 'exec(bytes32)' "$ilkBytes32"

        # setLine "${token}-${ilk}" "$(jq -r ".tokens.${token}.ilks.${ilk} | .line" "$CONFIG_FILE")"
    done
done

sethSend "$MCD_IAM_AUTO_LINE" 'rely(address)' "$MCD_PAUSE_PROXY"
sethSend "$MCD_IAM_AUTO_LINE" 'deny(address)' "$ETH_FROM"
