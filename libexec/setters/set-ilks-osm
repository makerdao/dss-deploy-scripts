#!/usr/bin/env bash

# shellcheck source=lib/common.sh
. "$LIB_DIR/common.sh"

# Get config variables
CONFIG_FILE="$OUT_DIR/config.json"
# Get addresses
loadAddresses

log "SET ILKS OSM:"

tokens=$(jq -r ".tokens | keys_unsorted[]" "$CONFIG_FILE")
for token in $tokens; do
    pipAddr=$(jq -r ".tokens.${token} | .import.pip | values" "$CONFIG_FILE")
    if [[ "$pipAddr" == "" ]]; then
        osmDelay=$(jq -r ".tokens.${token} | .pipDeploy | .osmDelay" "$CONFIG_FILE")
        if [[ "$osmDelay" -gt 0 ]]; then
            # Deploy OSM
            contract=$(dappCreate osm OSM "$(eval echo "\$MEDIANIZER_${token}")")
            eval "export ORACLE_SECURITY_MODULE_${token}=${contract}"
            log "ORACLE_SECURITY_MODULE_${token}=$(eval "echo ${contract}")"
            # Set OSM delay
            sethSend "$(eval echo "\$ORACLE_SECURITY_MODULE_${token}")" 'step(uint16)' "$osmDelay"
            # Set osm in spotter ilks
            ilks=$(jq -r ".tokens.${token}.ilks | keys_unsorted[]" "$CONFIG_FILE")
            for ilk in $ilks; do
                calldata="$(seth calldata 'file(address,address,address,bytes32,bytes32,address)' "$MRS_PAUSE" "$MRS_GOV_ACTIONS" "$MRS_SPOT" "$(seth --to-bytes32 "$(seth --from-ascii "${token}-${ilk}")")" "$(seth --to-bytes32 "$(seth --from-ascii "pip")")" "$(eval echo "\$ORACLE_SECURITY_MODULE_${token}")")"
                sethSend "$PROXY_DEPLOYER" 'execute(address,bytes memory)' "$PROXY_PAUSE_ACTIONS" "$calldata"
            done
        fi
    fi
done

for token in $tokens; do
addAddresses <<EOF
{
    "ORACLE_SECURITY_MODULE_${token}": "$(eval echo "\$ORACLE_SECURITY_MODULE_${token}")"
}
EOF
done
