#!/usr/bin/env bash

# shellcheck source=bin/lib/common.sh
. "$LIB_DIR/common.sh"

{ test -z "$1" || test -z "$3"; } && exit 1

tok=$1
if [[ -n "$2" ]]; then
    ilk="${1}-${2}"
    ilkVar="${1}_${2}"
else
    ilk="${1}"
    ilkVar="${1}"
fi
ilkJoin=$3 # adapter contract name
decimals=$4

# Deploy ETH ilk (adapter, spotter, flip and init variables)
test -z "$MCD_DEPLOY" && exit 1

MCD_VAT=0x$(seth call "$MCD_DEPLOY" "vat()(address)")
contract=$(dappCreate dss-deploy "$ilkJoin" "$MCD_VAT" "$(seth --to-bytes32 "$(seth --from-ascii "$ilk")")" "$(eval echo "\$${tok}")" "$decimals")
eval export "\MCD_JOIN_${ilkVar}=${contract}"
log "MCD_JOIN_${ilkVar}=$(eval "echo ${contract}")"

sethSend "$MCD_DEPLOY" "deployCollateral(bytes32,address,address)" "$(seth --to-bytes32 "$(seth --from-ascii "$ilk")")" "$(eval echo "\$MCD_JOIN_${ilkVar}")" "$(eval echo "\$PIP_${tok}")"
while IFS=$'\n' read -r line; do data+=("$line"); done < <(seth call "$MCD_DEPLOY" "ilks(bytes32)(address,address)" "$(seth --to-bytes32 "$(seth --from-ascii "$ilk")")")
eval export "\MCD_FLIP_${ilkVar}=0x${data[0]}"

cat > "$OUT_DIR/load-ilk-addr-temp" << EOF
#!/bin/bash
export PIP_${tok}=$(eval echo "\$PIP_${tok}")
export ${tok}=$(eval echo "\$${tok}")
export MCD_JOIN_${ilkVar}=$(eval echo "\$MCD_JOIN_${ilkVar}")
export MCD_FLIP_${ilkVar}=$(eval echo "\$MCD_FLIP_${ilkVar}")
EOF
